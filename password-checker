import re

def assess_password_strength(password):
    # Define criteria
    min_length = 8
    max_length = 20
    has_upper = re.compile(r'[A-Z]')
    has_lower = re.compile(r'[a-z]')
    has_digit = re.compile(r'\d')
    has_special = re.compile(r'[!@#$%^&*(),.?":{}|<>]')
    
    # Check length
    length = len(password)
    if length < min_length:
        length_feedback = "Password is too short. It should be at least 8 characters long."
    elif length > max_length:
        length_feedback = "Password is too long. It should be no more than 20 characters."
    else:
        length_feedback = "Password length is good."

    # Check for uppercase letters
    if not has_upper.search(password):
        upper_feedback = "Password should include at least one uppercase letter."
    else:
        upper_feedback = "Password includes uppercase letters."

    # Check for lowercase letters
    if not has_lower.search(password):
        lower_feedback = "Password should include at least one lowercase letter."
    else:
        lower_feedback = "Password includes lowercase letters."

    # Check for digits
    if not has_digit.search(password):
        digit_feedback = "Password should include at least one digit."
    else:
        digit_feedback = "Password includes digits."

    # Check for special characters
    if not has_special.search(password):
        special_feedback = "Password should include at least one special character."
    else:
        special_feedback = "Password includes special characters."

    # Determine overall strength
    if all([
        length >= min_length,
        length <= max_length,
        has_upper.search(password),
        has_lower.search(password),
        has_digit.search(password),
        has_special.search(password)
    ]):
        overall_feedback = "Your password is strong!"
    else:
        overall_feedback = "Your password is weak. Consider improving it based on the feedback above."

    return {
        "length_feedback": length_feedback,
        "upper_feedback": upper_feedback,
        "lower_feedback": lower_feedback,
        "digit_feedback": digit_feedback,
        "special_feedback": special_feedback,
        "overall_feedback": overall_feedback
    }

# Example usage
password = input("Enter your password to assess its strength: ")
feedback = assess_password_strength(password)

print("\nPassword Strength Assessment:")
for key, value in feedback.items():
    print(f"- {value}")
